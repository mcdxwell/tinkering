package main

import (
	"fmt"
	"strconv"
	"strings"
)

// reference:
// https://github.com/jmoiron/euler.go/blob/master/008.go
// this code will be redone and optimized
// Goals:
// 			Ignore slices where 0 is present
// 			Use addition -> create addition function
// 			Create tests
func product(s string) int {
	ans := 1
	for _, c := range s {
		v, _ := strconv.Atoi(string(c))
		ans *= v
	}
	return ans
}

func slicy() {
	number := ``
	nums := strings.Replace(number, " ", "", -1)
	nums = strings.Replace(nums, "\n", "", -1)

	largest := 0

	for i, j := 0, 13; j < len(nums); i++ {
		prod := product(nums[i:j])
		if prod > largest {
			largest = prod
			fmt.Printf("%d from %s\n", prod, nums[i:j])
		}
		j++
	}

}

func main() {
	slicy()
}
